//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExamWeb.JobPostingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobPostingDTO", Namespace="http://schemas.datacontract.org/2004/07/ExamWCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class JobPostingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentTypeDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CandidatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EmploymentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmploymentTypeNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Web.Mvc.SelectListItem[] EmploymentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobAttachmentDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MinimumExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SelectedAttachmentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SelectedCandidatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SelectedJobAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SelectedSkillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCandidatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentTypeDisplay {
            get {
                return this.AttachmentTypeDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentTypeDisplayField, value) != true)) {
                    this.AttachmentTypeDisplayField = value;
                    this.RaisePropertyChanged("AttachmentTypeDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Candidates {
            get {
                return this.CandidatesField;
            }
            set {
                if ((this.CandidatesField.Equals(value) != true)) {
                    this.CandidatesField = value;
                    this.RaisePropertyChanged("Candidates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EmploymentTypeID {
            get {
                return this.EmploymentTypeIDField;
            }
            set {
                if ((this.EmploymentTypeIDField.Equals(value) != true)) {
                    this.EmploymentTypeIDField = value;
                    this.RaisePropertyChanged("EmploymentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmploymentTypeNames {
            get {
                return this.EmploymentTypeNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmploymentTypeNamesField, value) != true)) {
                    this.EmploymentTypeNamesField = value;
                    this.RaisePropertyChanged("EmploymentTypeNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Web.Mvc.SelectListItem[] EmploymentTypes {
            get {
                return this.EmploymentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmploymentTypesField, value) != true)) {
                    this.EmploymentTypesField = value;
                    this.RaisePropertyChanged("EmploymentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsClosed {
            get {
                return this.IsClosedField;
            }
            set {
                if ((this.IsClosedField.Equals(value) != true)) {
                    this.IsClosedField = value;
                    this.RaisePropertyChanged("IsClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobAttachmentDisplay {
            get {
                return this.JobAttachmentDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.JobAttachmentDisplayField, value) != true)) {
                    this.JobAttachmentDisplayField = value;
                    this.RaisePropertyChanged("JobAttachmentDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((this.JobIDField.Equals(value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MinimumExperience {
            get {
                return this.MinimumExperienceField;
            }
            set {
                if ((this.MinimumExperienceField.Equals(value) != true)) {
                    this.MinimumExperienceField = value;
                    this.RaisePropertyChanged("MinimumExperience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SelectedAttachmentTypes {
            get {
                return this.SelectedAttachmentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedAttachmentTypesField, value) != true)) {
                    this.SelectedAttachmentTypesField = value;
                    this.RaisePropertyChanged("SelectedAttachmentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SelectedCandidates {
            get {
                return this.SelectedCandidatesField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedCandidatesField, value) != true)) {
                    this.SelectedCandidatesField = value;
                    this.RaisePropertyChanged("SelectedCandidates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SelectedJobAttachments {
            get {
                return this.SelectedJobAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedJobAttachmentsField, value) != true)) {
                    this.SelectedJobAttachmentsField = value;
                    this.RaisePropertyChanged("SelectedJobAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SelectedSkills {
            get {
                return this.SelectedSkillsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSkillsField, value) != true)) {
                    this.SelectedSkillsField = value;
                    this.RaisePropertyChanged("SelectedSkills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillDisplay {
            get {
                return this.SkillDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillDisplayField, value) != true)) {
                    this.SkillDisplayField = value;
                    this.RaisePropertyChanged("SkillDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCandidates {
            get {
                return this.TotalCandidatesField;
            }
            set {
                if ((this.TotalCandidatesField.Equals(value) != true)) {
                    this.TotalCandidatesField = value;
                    this.RaisePropertyChanged("TotalCandidates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkillsDTO", Namespace="http://schemas.datacontract.org/2004/07/ExamWCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class SkillsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SkillIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SkillID {
            get {
                return this.SkillIDField;
            }
            set {
                if ((this.SkillIDField.Equals(value) != true)) {
                    this.SkillIDField = value;
                    this.RaisePropertyChanged("SkillID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmploymentTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/ExamWCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class EmploymentTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EmploymentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EmploymentTypeID {
            get {
                return this.EmploymentTypeIDField;
            }
            set {
                if ((this.EmploymentTypeIDField.Equals(value) != true)) {
                    this.EmploymentTypeIDField = value;
                    this.RaisePropertyChanged("EmploymentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/ExamWCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class AttachmentTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AttachmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AttachmentTypeID {
            get {
                return this.AttachmentTypeIDField;
            }
            set {
                if ((this.AttachmentTypeIDField.Equals(value) != true)) {
                    this.AttachmentTypeIDField = value;
                    this.RaisePropertyChanged("AttachmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobAttachmentDTO", Namespace="http://schemas.datacontract.org/2004/07/ExamWCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class JobAttachmentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlumniIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlumniNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentTypeDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AttachmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SelectedAttachmentTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlumniID {
            get {
                return this.AlumniIDField;
            }
            set {
                if ((this.AlumniIDField.Equals(value) != true)) {
                    this.AlumniIDField = value;
                    this.RaisePropertyChanged("AlumniID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlumniName {
            get {
                return this.AlumniNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlumniNameField, value) != true)) {
                    this.AlumniNameField = value;
                    this.RaisePropertyChanged("AlumniName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentID {
            get {
                return this.AttachmentIDField;
            }
            set {
                if ((this.AttachmentIDField.Equals(value) != true)) {
                    this.AttachmentIDField = value;
                    this.RaisePropertyChanged("AttachmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentTypeDisplay {
            get {
                return this.AttachmentTypeDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentTypeDisplayField, value) != true)) {
                    this.AttachmentTypeDisplayField = value;
                    this.RaisePropertyChanged("AttachmentTypeDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AttachmentTypeID {
            get {
                return this.AttachmentTypeIDField;
            }
            set {
                if ((this.AttachmentTypeIDField.Equals(value) != true)) {
                    this.AttachmentTypeIDField = value;
                    this.RaisePropertyChanged("AttachmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((this.JobIDField.Equals(value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SelectedAttachmentTypes {
            get {
                return this.SelectedAttachmentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedAttachmentTypesField, value) != true)) {
                    this.SelectedAttachmentTypesField = value;
                    this.RaisePropertyChanged("SelectedAttachmentTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobCandidateDTO", Namespace="http://schemas.datacontract.org/2004/07/ExamWCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class JobCandidateDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlumniIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExamWeb.JobPostingService.JobAttachmentDTO[] JobAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlumniID {
            get {
                return this.AlumniIDField;
            }
            set {
                if ((this.AlumniIDField.Equals(value) != true)) {
                    this.AlumniIDField = value;
                    this.RaisePropertyChanged("AlumniID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExamWeb.JobPostingService.JobAttachmentDTO[] JobAttachments {
            get {
                return this.JobAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.JobAttachmentsField, value) != true)) {
                    this.JobAttachmentsField = value;
                    this.RaisePropertyChanged("JobAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((this.JobIDField.Equals(value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobPostingService.IJobPostingService")]
    public interface IJobPostingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobPostings", ReplyAction="http://tempuri.org/IJobPostingService/GetJobPostingsResponse")]
        ExamWeb.JobPostingService.JobPostingDTO[] GetJobPostings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobPostings", ReplyAction="http://tempuri.org/IJobPostingService/GetJobPostingsResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobPostingDTO[]> GetJobPostingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetSkills", ReplyAction="http://tempuri.org/IJobPostingService/GetSkillsResponse")]
        ExamWeb.JobPostingService.SkillsDTO[] GetSkills();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetSkills", ReplyAction="http://tempuri.org/IJobPostingService/GetSkillsResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.SkillsDTO[]> GetSkillsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetEmploymentTypes", ReplyAction="http://tempuri.org/IJobPostingService/GetEmploymentTypesResponse")]
        ExamWeb.JobPostingService.EmploymentTypeDTO[] GetEmploymentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetEmploymentTypes", ReplyAction="http://tempuri.org/IJobPostingService/GetEmploymentTypesResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.EmploymentTypeDTO[]> GetEmploymentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetAttachmentTypes", ReplyAction="http://tempuri.org/IJobPostingService/GetAttachmentTypesResponse")]
        ExamWeb.JobPostingService.AttachmentTypeDTO[] GetAttachmentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetAttachmentTypes", ReplyAction="http://tempuri.org/IJobPostingService/GetAttachmentTypesResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.AttachmentTypeDTO[]> GetAttachmentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobAttachments", ReplyAction="http://tempuri.org/IJobPostingService/GetJobAttachmentsResponse")]
        ExamWeb.JobPostingService.JobAttachmentDTO[] GetJobAttachments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobAttachments", ReplyAction="http://tempuri.org/IJobPostingService/GetJobAttachmentsResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobAttachmentDTO[]> GetJobAttachmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobPostingByID", ReplyAction="http://tempuri.org/IJobPostingService/GetJobPostingByIDResponse")]
        ExamWeb.JobPostingService.JobPostingDTO GetJobPostingByID(System.Guid jobPostingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobPostingByID", ReplyAction="http://tempuri.org/IJobPostingService/GetJobPostingByIDResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobPostingDTO> GetJobPostingByIDAsync(System.Guid jobPostingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetSkillByID", ReplyAction="http://tempuri.org/IJobPostingService/GetSkillByIDResponse")]
        ExamWeb.JobPostingService.SkillsDTO GetSkillByID(int skillID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetSkillByID", ReplyAction="http://tempuri.org/IJobPostingService/GetSkillByIDResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.SkillsDTO> GetSkillByIDAsync(int skillID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetEmploymentTypeByID", ReplyAction="http://tempuri.org/IJobPostingService/GetEmploymentTypeByIDResponse")]
        ExamWeb.JobPostingService.EmploymentTypeDTO GetEmploymentTypeByID(byte employmentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetEmploymentTypeByID", ReplyAction="http://tempuri.org/IJobPostingService/GetEmploymentTypeByIDResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.EmploymentTypeDTO> GetEmploymentTypeByIDAsync(byte employmentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetAttachmentTypeByID", ReplyAction="http://tempuri.org/IJobPostingService/GetAttachmentTypeByIDResponse")]
        ExamWeb.JobPostingService.AttachmentTypeDTO GetAttachmentTypeByID(byte attachmentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetAttachmentTypeByID", ReplyAction="http://tempuri.org/IJobPostingService/GetAttachmentTypeByIDResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.AttachmentTypeDTO> GetAttachmentTypeByIDAsync(byte attachmentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobAttachmentByID", ReplyAction="http://tempuri.org/IJobPostingService/GetJobAttachmentByIDResponse")]
        ExamWeb.JobPostingService.JobAttachmentDTO GetJobAttachmentByID(int attachmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobAttachmentByID", ReplyAction="http://tempuri.org/IJobPostingService/GetJobAttachmentByIDResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobAttachmentDTO> GetJobAttachmentByIDAsync(int attachmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/InsertJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/InsertJobPostingResponse")]
        void InsertJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPosting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/InsertJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/InsertJobPostingResponse")]
        System.Threading.Tasks.Task InsertJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPosting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/UpdateJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/UpdateJobPostingResponse")]
        void UpdateJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPosting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/UpdateJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/UpdateJobPostingResponse")]
        System.Threading.Tasks.Task UpdateJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPosting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/DeleteJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/DeleteJobPostingResponse")]
        void DeleteJobPosting(System.Guid jobPostingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/DeleteJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/DeleteJobPostingResponse")]
        System.Threading.Tasks.Task DeleteJobPostingAsync(System.Guid jobPostingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/ApplyToJob", ReplyAction="http://tempuri.org/IJobPostingService/ApplyToJobResponse")]
        void ApplyToJob(ExamWeb.JobPostingService.JobAttachmentDTO applyJob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/ApplyToJob", ReplyAction="http://tempuri.org/IJobPostingService/ApplyToJobResponse")]
        System.Threading.Tasks.Task ApplyToJobAsync(ExamWeb.JobPostingService.JobAttachmentDTO applyJob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/InsertJobCandidate", ReplyAction="http://tempuri.org/IJobPostingService/InsertJobCandidateResponse")]
        void InsertJobCandidate(ExamWeb.JobPostingService.JobCandidateDTO jobCandidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/InsertJobCandidate", ReplyAction="http://tempuri.org/IJobPostingService/InsertJobCandidateResponse")]
        System.Threading.Tasks.Task InsertJobCandidateAsync(ExamWeb.JobPostingService.JobCandidateDTO jobCandidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/UpsertJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/UpsertJobPostingResponse")]
        void UpsertJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPosting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/UpsertJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/UpsertJobPostingResponse")]
        System.Threading.Tasks.Task UpsertJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPosting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetAllCandidateByJobID", ReplyAction="http://tempuri.org/IJobPostingService/GetAllCandidateByJobIDResponse")]
        ExamWeb.JobPostingService.JobCandidateDTO[] GetAllCandidateByJobID(System.Guid jobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetAllCandidateByJobID", ReplyAction="http://tempuri.org/IJobPostingService/GetAllCandidateByJobIDResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobCandidateDTO[]> GetAllCandidateByJobIDAsync(System.Guid jobID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobPostingServiceChannel : ExamWeb.JobPostingService.IJobPostingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobPostingServiceClient : System.ServiceModel.ClientBase<ExamWeb.JobPostingService.IJobPostingService>, ExamWeb.JobPostingService.IJobPostingService {
        
        public JobPostingServiceClient() {
        }
        
        public JobPostingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobPostingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobPostingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobPostingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ExamWeb.JobPostingService.JobPostingDTO[] GetJobPostings() {
            return base.Channel.GetJobPostings();
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobPostingDTO[]> GetJobPostingsAsync() {
            return base.Channel.GetJobPostingsAsync();
        }
        
        public ExamWeb.JobPostingService.SkillsDTO[] GetSkills() {
            return base.Channel.GetSkills();
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.SkillsDTO[]> GetSkillsAsync() {
            return base.Channel.GetSkillsAsync();
        }
        
        public ExamWeb.JobPostingService.EmploymentTypeDTO[] GetEmploymentTypes() {
            return base.Channel.GetEmploymentTypes();
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.EmploymentTypeDTO[]> GetEmploymentTypesAsync() {
            return base.Channel.GetEmploymentTypesAsync();
        }
        
        public ExamWeb.JobPostingService.AttachmentTypeDTO[] GetAttachmentTypes() {
            return base.Channel.GetAttachmentTypes();
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.AttachmentTypeDTO[]> GetAttachmentTypesAsync() {
            return base.Channel.GetAttachmentTypesAsync();
        }
        
        public ExamWeb.JobPostingService.JobAttachmentDTO[] GetJobAttachments() {
            return base.Channel.GetJobAttachments();
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobAttachmentDTO[]> GetJobAttachmentsAsync() {
            return base.Channel.GetJobAttachmentsAsync();
        }
        
        public ExamWeb.JobPostingService.JobPostingDTO GetJobPostingByID(System.Guid jobPostingID) {
            return base.Channel.GetJobPostingByID(jobPostingID);
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobPostingDTO> GetJobPostingByIDAsync(System.Guid jobPostingID) {
            return base.Channel.GetJobPostingByIDAsync(jobPostingID);
        }
        
        public ExamWeb.JobPostingService.SkillsDTO GetSkillByID(int skillID) {
            return base.Channel.GetSkillByID(skillID);
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.SkillsDTO> GetSkillByIDAsync(int skillID) {
            return base.Channel.GetSkillByIDAsync(skillID);
        }
        
        public ExamWeb.JobPostingService.EmploymentTypeDTO GetEmploymentTypeByID(byte employmentTypeID) {
            return base.Channel.GetEmploymentTypeByID(employmentTypeID);
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.EmploymentTypeDTO> GetEmploymentTypeByIDAsync(byte employmentTypeID) {
            return base.Channel.GetEmploymentTypeByIDAsync(employmentTypeID);
        }
        
        public ExamWeb.JobPostingService.AttachmentTypeDTO GetAttachmentTypeByID(byte attachmentTypeID) {
            return base.Channel.GetAttachmentTypeByID(attachmentTypeID);
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.AttachmentTypeDTO> GetAttachmentTypeByIDAsync(byte attachmentTypeID) {
            return base.Channel.GetAttachmentTypeByIDAsync(attachmentTypeID);
        }
        
        public ExamWeb.JobPostingService.JobAttachmentDTO GetJobAttachmentByID(int attachmentID) {
            return base.Channel.GetJobAttachmentByID(attachmentID);
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobAttachmentDTO> GetJobAttachmentByIDAsync(int attachmentID) {
            return base.Channel.GetJobAttachmentByIDAsync(attachmentID);
        }
        
        public void InsertJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPosting) {
            base.Channel.InsertJobPosting(jobPosting);
        }
        
        public System.Threading.Tasks.Task InsertJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPosting) {
            return base.Channel.InsertJobPostingAsync(jobPosting);
        }
        
        public void UpdateJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPosting) {
            base.Channel.UpdateJobPosting(jobPosting);
        }
        
        public System.Threading.Tasks.Task UpdateJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPosting) {
            return base.Channel.UpdateJobPostingAsync(jobPosting);
        }
        
        public void DeleteJobPosting(System.Guid jobPostingID) {
            base.Channel.DeleteJobPosting(jobPostingID);
        }
        
        public System.Threading.Tasks.Task DeleteJobPostingAsync(System.Guid jobPostingID) {
            return base.Channel.DeleteJobPostingAsync(jobPostingID);
        }
        
        public void ApplyToJob(ExamWeb.JobPostingService.JobAttachmentDTO applyJob) {
            base.Channel.ApplyToJob(applyJob);
        }
        
        public System.Threading.Tasks.Task ApplyToJobAsync(ExamWeb.JobPostingService.JobAttachmentDTO applyJob) {
            return base.Channel.ApplyToJobAsync(applyJob);
        }
        
        public void InsertJobCandidate(ExamWeb.JobPostingService.JobCandidateDTO jobCandidate) {
            base.Channel.InsertJobCandidate(jobCandidate);
        }
        
        public System.Threading.Tasks.Task InsertJobCandidateAsync(ExamWeb.JobPostingService.JobCandidateDTO jobCandidate) {
            return base.Channel.InsertJobCandidateAsync(jobCandidate);
        }
        
        public void UpsertJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPosting) {
            base.Channel.UpsertJobPosting(jobPosting);
        }
        
        public System.Threading.Tasks.Task UpsertJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPosting) {
            return base.Channel.UpsertJobPostingAsync(jobPosting);
        }
        
        public ExamWeb.JobPostingService.JobCandidateDTO[] GetAllCandidateByJobID(System.Guid jobID) {
            return base.Channel.GetAllCandidateByJobID(jobID);
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobCandidateDTO[]> GetAllCandidateByJobIDAsync(System.Guid jobID) {
            return base.Channel.GetAllCandidateByJobIDAsync(jobID);
        }
    }
}
