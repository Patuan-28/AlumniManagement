//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExamWeb.PhotoAlbumService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoAlbumDTO", Namespace="http://schemas.datacontract.org/2004/07/ExamWCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class PhotoAlbumDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumID {
            get {
                return this.AlbumIDField;
            }
            set {
                if ((this.AlbumIDField.Equals(value) != true)) {
                    this.AlbumIDField = value;
                    this.RaisePropertyChanged("AlbumID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhotoAlbumService.IPhotoAlbumService")]
    public interface IPhotoAlbumService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoAlbumService/GetPhotoAlbums", ReplyAction="http://tempuri.org/IPhotoAlbumService/GetPhotoAlbumsResponse")]
        ExamWeb.PhotoAlbumService.PhotoAlbumDTO[] GetPhotoAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoAlbumService/GetPhotoAlbums", ReplyAction="http://tempuri.org/IPhotoAlbumService/GetPhotoAlbumsResponse")]
        System.Threading.Tasks.Task<ExamWeb.PhotoAlbumService.PhotoAlbumDTO[]> GetPhotoAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoAlbumService/GetPhotoAlbumById", ReplyAction="http://tempuri.org/IPhotoAlbumService/GetPhotoAlbumByIdResponse")]
        ExamWeb.PhotoAlbumService.PhotoAlbumDTO GetPhotoAlbumById(int photoAlbumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoAlbumService/GetPhotoAlbumById", ReplyAction="http://tempuri.org/IPhotoAlbumService/GetPhotoAlbumByIdResponse")]
        System.Threading.Tasks.Task<ExamWeb.PhotoAlbumService.PhotoAlbumDTO> GetPhotoAlbumByIdAsync(int photoAlbumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoAlbumService/UpsertPhotoAlbum", ReplyAction="http://tempuri.org/IPhotoAlbumService/UpsertPhotoAlbumResponse")]
        void UpsertPhotoAlbum(ExamWeb.PhotoAlbumService.PhotoAlbumDTO photoAlbum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoAlbumService/UpsertPhotoAlbum", ReplyAction="http://tempuri.org/IPhotoAlbumService/UpsertPhotoAlbumResponse")]
        System.Threading.Tasks.Task UpsertPhotoAlbumAsync(ExamWeb.PhotoAlbumService.PhotoAlbumDTO photoAlbum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoAlbumService/DeletePhotoAlbum", ReplyAction="http://tempuri.org/IPhotoAlbumService/DeletePhotoAlbumResponse")]
        void DeletePhotoAlbum(int photoAlbumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoAlbumService/DeletePhotoAlbum", ReplyAction="http://tempuri.org/IPhotoAlbumService/DeletePhotoAlbumResponse")]
        System.Threading.Tasks.Task DeletePhotoAlbumAsync(int photoAlbumId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhotoAlbumServiceChannel : ExamWeb.PhotoAlbumService.IPhotoAlbumService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhotoAlbumServiceClient : System.ServiceModel.ClientBase<ExamWeb.PhotoAlbumService.IPhotoAlbumService>, ExamWeb.PhotoAlbumService.IPhotoAlbumService {
        
        public PhotoAlbumServiceClient() {
        }
        
        public PhotoAlbumServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhotoAlbumServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoAlbumServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoAlbumServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ExamWeb.PhotoAlbumService.PhotoAlbumDTO[] GetPhotoAlbums() {
            return base.Channel.GetPhotoAlbums();
        }
        
        public System.Threading.Tasks.Task<ExamWeb.PhotoAlbumService.PhotoAlbumDTO[]> GetPhotoAlbumsAsync() {
            return base.Channel.GetPhotoAlbumsAsync();
        }
        
        public ExamWeb.PhotoAlbumService.PhotoAlbumDTO GetPhotoAlbumById(int photoAlbumId) {
            return base.Channel.GetPhotoAlbumById(photoAlbumId);
        }
        
        public System.Threading.Tasks.Task<ExamWeb.PhotoAlbumService.PhotoAlbumDTO> GetPhotoAlbumByIdAsync(int photoAlbumId) {
            return base.Channel.GetPhotoAlbumByIdAsync(photoAlbumId);
        }
        
        public void UpsertPhotoAlbum(ExamWeb.PhotoAlbumService.PhotoAlbumDTO photoAlbum) {
            base.Channel.UpsertPhotoAlbum(photoAlbum);
        }
        
        public System.Threading.Tasks.Task UpsertPhotoAlbumAsync(ExamWeb.PhotoAlbumService.PhotoAlbumDTO photoAlbum) {
            return base.Channel.UpsertPhotoAlbumAsync(photoAlbum);
        }
        
        public void DeletePhotoAlbum(int photoAlbumId) {
            base.Channel.DeletePhotoAlbum(photoAlbumId);
        }
        
        public System.Threading.Tasks.Task DeletePhotoAlbumAsync(int photoAlbumId) {
            return base.Channel.DeletePhotoAlbumAsync(photoAlbumId);
        }
    }
}
